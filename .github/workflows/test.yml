name: Test

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '**/LICENSE'
      - '**/*.md'

env:
  BASE_REF: ${{ github.base_ref || 'main' }}
  HEAD_REF: ${{ github.head_ref || github.ref }}

jobs:
  setup:
    name: Setup testing environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3

      - name: Cache node modules
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules-cache
        with:
          path: node_modules
          key: ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-
            ${{ env.cache-name }}-

      - name: List the state of node modules
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: npm ci

  codecheck:
    name: Run code check
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve node modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules-cache
        with:
          path: node_modules
          key: ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-
            ${{ env.cache-name }}-

      - name: Cache retrieval failure
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: |
          echo "::error file=node_modules::Failed to retrieve the cache"
          exit 1

      - name: Run codecheck script
        run: npm run codecheck

  test:
    name: Test with TypeScript ${{ matrix.typescript }} on Node ${{ matrix.node }}
    runs-on: ubuntu-latest
    needs: [codecheck]
    strategy:
      matrix:
        node: ['18.x', '20.x', '22.x']
        typescript: ['4.7.4', 'latest']
    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Retrieve node modules cache
        id: node-modules-cache
        uses: actions/cache@v3
        env:
          cache-name: node-modules-cache
        with:
          path: node_modules
          key: ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-${{ runner.os }}-
            ${{ env.cache-name }}-${{ env.HEAD_REF }}-
            ${{ env.cache-name }}-

      - name: Cache retrieval failure
        if: ${{ steps.node-modules-cache.outputs.cache-hit != 'true' }}
        run: |
          echo "::error file=node_modules::Failed to retrieve the cache"
          exit 1

      - name: Install specific TypeScript version
        run: npm install typescript@${{ matrix.typescript }} --no-save --no-audit

      - name: Run test script
        run: npm run test

  test-result:
    name: Test result
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ always() }}
    steps:
      - name: Check test status
        run: |
          if [ ${{ needs.test.result }} == 'success' ]; then
            echo 'All tests passed!'
            exit 0
          else
            echo 'Some tests failed.'
            exit 1
          fi
